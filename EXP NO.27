#include <stdio.h>
#include <limits.h>

#define MAX 100
#define INF INT_MAX

int n;
int graph[MAX][MAX];

void floyd() {
  for (int k = 0; k < n; k++) {
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (graph[i][k] != INF && graph[k][j] != INF &&
            graph[i][k] + graph[k][j] < graph[i][j]) {
          graph[i][j] = graph[i][k] + graph[k][j];
        }
      }
    }
  }
}

int main() {
  printf("Enter the number of vertices: ");
  scanf("%d", &n);
  printf("Enter the weighted matrix:\n");
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
      scanf("%d", &graph[i][j]);
      if (graph[i][j] == 0 && i != j) {
        graph[i][j] = INF;
      }
    }
  }
  floyd();
  printf("The shortest distances between all pairs of vertices are:\n");
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
      if (graph[i][j] == INF) {
        printf("INF ");
      } else {
        printf("%d ", graph[i][j]);
      }
    }
    printf("\n");
  }
  return 0;
}
